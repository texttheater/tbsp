[]
prelude =
	import shlex

[out/srl/baseline.%{portion}.clf]
cond = %{portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 > %{target}

[out/srl/upperbound-drs-token.%{portion}.clf]
cond = %{portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
dep.roles = data/srl/kilian_%{portion}_elmo_decoded.json
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 --roles %{roles} --gold-roles > %{target}

[out/srl/upperbound-ccg-token.%{portion}.clf]
cond = %{portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
dep.roles = data/srl/210405_gosse-%{portion}-predicted_elmo.json
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 --roles %{roles} --gold-roles > %{target}

[out/srl/glove-drs-token.%{portion}.clf]
cond = %{portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
dep.roles = data/srl/kilian_%{portion}_noelmo-canonical.json
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 --roles %{roles} > %{target}

[out/srl/elmo-drs-token.%{portion}.clf]
cond = %{portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
dep.roles = data/srl/kilian_%{portion}_elmo_decoded.json
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 --roles %{roles} > %{target}

[out/srl/elmo-ccg-token.%{portion}.clf]
cond = %{portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
dep.roles = data/srl/210405_gosse-%{portion}-predicted_elmo.json
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 --roles %{roles} > %{target}

[out/srl/%{setting}.%{portion}.eval]
cond = %{portion in ('dev', 'test')}
dep.clf = out/srl/%{setting}.%{portion}.clf
dep.gold = data/pmb-3.0.0/en/gold/%{portion}.txt
recipe = python3 ext/DRS_parsing_3/evaluation/counter.py -f1 %{clf} -f2 %{gold} -prin -ill dummy -g ext/DRS_parsing_3/evaluation/clf_signature.yaml -runs 5 > %{target}

[report]
type = task
settings = baseline upperbound-drs-token upperbound-ccg-token glove-drs-token elmo-drs-token elmo-ccg-token
deps = %{f'out/srl/{s}.dev.eval' for s in shlex.split(settings)}
recipe =
	for setting in %{settings}
	do
		echo -n $setting ' '
		tail -1 out/srl/$setting.dev.eval
	done
