[]
prelude =
	import shlex

[out/srl/baseline.%{portion}.clf]
cond = %{portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 > %{target}

[out/srl/upperbound-%{conv}-token.%{portion}.clf]
cond = %{conv in ('drs', 'ccg') and portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
dep.roles = SRL-DRS/srl/%{conv}_elmo.%{portion}.json
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 --roles %{roles} --gold-roles > %{target}

[out/srl/%{emb}-%{conv}-token.%{portion}.clf]
cond = %{emb in ('glove', 'elmo') and conv in ('drs', 'ccg') and portion in ('dev', 'test')}
dep.oracles = out/pmb-3.0.0.en.train.gold.oracles.jsonl
dep.model = out/pmb-3.0.0.en.train.sg4g10.model
dep.tok = out/pmb-3.0.0.en.%{portion}.tok
dep.roles = SRL-DRS/srl/%{conv}_%{emb}.%{portion}.json
recipe =
	set -e
	mkdir -p $(dirname %{target})
	python3 decode.py en %{oracles} %{model} %{tok} --mode 3 --roles %{roles} > %{target}

[SRL-DRS/Neural_DRS/data/3.0.0/en/gold/dev.txt.raw.tok.gold]
dep.clf = SRL-DRS/Neural_DRS/data/3.0.0/en/gold/dev.txt
dep.clf2tok = clf2tok.py
recipe =
	set -e
	set -o pipefail
	cat %{clf} | python %{clf2tok} > %{target}

[out/srl/%{emb}-%{conv}-concept.%{portion}.clf]
cond = %{emb in ('glove', 'elmo') and conv in ('drs', 'ccg') and portion in ('dev', 'test')}
baseline = out/srl/baseline.%{portion}.clf
dep.alignments_g = SRL-DRS/alignments/gold.json
dep.alignments_bsg = SRL-DRS/alignments/gold_silver_bronze.json
dep.roles = SRL-DRS/srl/%{conv}_%{emb}.%{portion}.json
dep.tok = SRL-DRS/Neural_DRS/data/3.0.0/en/gold/dev.txt.raw.tok.gold
reorder = %{f' --reorder {tok}' if conv == 'drs' else ''}
recipe =
	set -e
	mkdir -p $(dirname %{target})
	export PYTHONPATH=SRL-DRS
	python3 SRL-DRS/src/replace_roles_by_srl.py -i %{baseline} -a %{alignments_g} %{alignments_bsg} -r %{roles} -l%{reorder}
	mv %{baseline}.fix %{target}

[out/srl/%{setting}.%{portion}.eval]
cond = %{portion in ('dev', 'test')}
dep.clf = out/srl/%{setting}.%{portion}.clf
dep.gold = data/pmb-3.0.0/en/gold/%{portion}.txt
recipe = python3 ext/DRS_parsing_3/evaluation/counter.py -f1 %{clf} -f2 %{gold} -prin -ill dummy -g ext/DRS_parsing_3/evaluation/clf_signature.yaml -runs 5 > %{target}

[report]
type = task
settings = baseline upperbound-drs-token upperbound-ccg-token glove-drs-token elmo-drs-token glove-ccg-token elmo-ccg-token glove-drs-concept elmo-drs-concept glove-ccg-concept elmo-ccg-concept
deps = %{f'out/srl/{s}.dev.eval' for s in shlex.split(settings)}
recipe =
	for setting in %{settings}
	do
		echo -n $setting ''
		tail -1 out/srl/$setting.dev.eval
	done
